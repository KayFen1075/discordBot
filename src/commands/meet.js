const { SlashCommandBuilder, PermissionsBitField, Colors } = require('discord.js');
const { execute } = require('./list');
const fs = require('fs');
const { fileLog } = require('../functions/logs')
const { EmbedBuilder } = require('@discordjs/builders');
const { meetStart, meetEnd_message } = require('../functions/meet');
module.exports = {
    data: new SlashCommandBuilder()
        .setName('meet')
        .setDescription('–ö–æ–º–∞–Ω–¥—ã —Å —Å–æ–±—Ä–∞–Ω–∏–µ–º')
        .addSubcommand(subcommand => subcommand
            .setName('leave')
            .setDescription('–í—ã–π—Ç–∏ –∏–∑ —Å–æ–±–∞—Ä–Ω–∏—è, –Ω–∞–¥–æ –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–æ–±—Ä–∞–Ω–∏–µ.')
            .addMentionableOption(option => option
                .setName('user')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–æ–±—Ä–∞–Ω–∏–µ')
                .setRequired(true)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName('create')
            .setDescription('–°–æ–∑–¥–∞—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ, —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä–∞—è –ø–æ—è–≤—Ç—å—Å—è')
            .addStringOption(option => option
                .setName('subject')
                .setDescription('–í—ã–±—Ä–∞—Ç—å —Å–≤–æ—é —Ç–µ–º—É —Å–æ–±—Ä–∞–Ω–∏—è, –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ ","')
                .setRequired(false)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName('end')
            .setDescription('–ó–∞–∫–æ–Ω—á–∏—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ')
        )
        .addSubcommand(subcommand => subcommand
            .setName('kick')
            .setDescription('–í—ã–≥–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–æ–±—Ä–∞–Ω–∏—è')
            .addMentionableOption(option => option
                .setName('user')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ –≤—ã–≥–Ω–∞—Ç—å')
                .setRequired(true)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName('add')
            .setDescription('–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–±—Ä–∞–Ω–∏–µ')
            .addMentionableOption(option => option
                .setName('user')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å')
                .setRequired(true)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName('info')
            .setDescription('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–æ–±—Ä–∞–Ω–∏—è')
        )
        .addSubcommand(subcommand => subcommand
            .setName('change')
            .setDescription('–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—É —Å–æ–±—Ä–∞–Ω–∏—è')
            .addStringOption(option => option
                .setName('subject')
                .setDescription('–í—ã–±—Ä–∞—Ç—å —Å–≤–æ—é —Ç–µ–º—É —Å–æ–±—Ä–∞–Ω–∏—è, –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ ","')
                .setRequired(true)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName('plan')
            .setDescription('–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ')
            .addStringOption(option => option
                .setName('subject')
                .setDescription('–í—ã–±—Ä–∞—Ç—å —Å–≤–æ—é —Ç–µ–º—É —Å–æ–±—Ä–∞–Ω–∏—è, –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ ","')
                .setRequired(false)
            )
        )
        .addSubcommand(subcommand => subcommand
            .setName('start')
            .setDescription('–ù–∞—á–∞—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ')
        )
        .addSubcommand(subcommand => subcommand
            .setName('invite')
            .setDescription('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Å–æ–±—Ä–∞–Ω–∏–µ')
            .addMentionableOption(option => option
                .setName('user')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å')
                .setRequired(true)
            )
        ),

    async execute(interaction) {
        const meetChannel = await interaction.guild.channels.cache.get('1074715039212253346')

        // leave subcommand
        if (interaction.options._subcommand === 'leave') {
            if (fs.existsSync(`./src/dataBase/meets/${interaction.options.get('user').value}.json`)) {
                let meet = JSON.parse(fs.readFileSync(`./src/dataBase/meets/${interaction.options.get('user').value}.json`))
                const voiceChannel = interaction.guild.channels.cache.get(meet.channel)
                if (interaction.options.get('user').value === interaction.user.id) {
                    voiceChannel.delete();

                    const timeMeet = Date.now() - meet.time_start
                
                    let bot = JSON.parse(fs.readFileSync(`./src/dataBase/bot.json`))
                        bot.state[bot.state.length - 1] = bot.state[bot.state.length - 1] + timeMeet
                        fs.writeFileSync(`./src/dataBase/bot.json`, JSON.stringify(bot))
                    
                        meetChannel.send(`<@${interaction.user.id}> –∑–∞–∫—Ä—ã–ª —Å–æ–±—Ä–∞–Ω–∏–µ, –µ—Å–ª–∏–∏ –±—ã—Ç—å —Ç–æ—á–Ω–µ–µ —Ç–æ —ç—Ç–æ—Ç –µ–±–∞–Ω –≤—ã—à–µ–ª –∏–∑ —Å–≤–æ–µ–≥–æ –∂–µ —Å–æ–±—Ä–∞–Ω–∏—è`)
                        fileLog(`[MEET] ${interaction.user.tag} –∑–∞–∫—Ä—ã–ª —Å–æ–±—Ä–∞–Ω–∏–µ, –µ—Å–ª–∏–∏ –±—ã—Ç—å —Ç–æ—á–Ω–µ–µ —Ç–æ —ç—Ç–æ—Ç –µ–±–∞–Ω –≤—ã—à–µ–ª –∏–∑ —Å–≤–æ–µ–≥–æ –∂–µ —Å–æ–±—Ä–∞–Ω–∏—è`)
                    await interaction.reply({content: `–í—ã —É–¥–∞–ª–∏–ª–∏ —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})
                    meetEnd_message(interaction.client, interaction.user.id)
                } else {
                    let userOverwrite = voiceChannel.permissionOverwrites
                    if (userOverwrite) {
                        userOverwrite.delete(interaction.user);
                    } voiceChannel.userLimit = await voiceChannel.userLimit - 1 
                    voiceChannel.send(`<@${interaction.user.id}> –ø–æ–∫–∏–Ω—É–ª —Å–æ–±—Ä–∞–Ω–∏–µ`)
                    meet.users_list = meet.users_list.filter(item => item !== interaction.user.id)
                    interaction.reply({content: `–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})
                    fileLog(`[MEET] ${interaction.user.tag} –ø–æ–∫–∏–Ω—É–ª —Å–æ–±—Ä–∞–Ω–∏–µ ${interaction.options.get('user').value}`)
                    fs.writeFileSync(`./src/dataBase/meets/${interaction.options.get('user').value}.json`, JSON.stringify(meet))
                }
            } else {
                interaction.reply({content: `–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})
            } 
        }

        // kick user in meet
        else if (interaction.options._subcommand === 'kick') {
            if (fs.existsSync(`./src/dataBase/meets/${interaction.user.id}.json`)) {

                let meet = JSON.parse(fs.readFileSync(`./src/dataBase/meets/${interaction.user.id}.json`))
                const voiceChannel = interaction.guild.channels.cache.get(meet.channel)

                if (meet.users_list.includes(interaction.options.get('user').value)) {
                    meet.users_list = meet.users_list.filter(item => item !== interaction.options.get('user').value)
                    interaction.reply({ content: `–í—ã –≤—ã–≥–Ω–∞–ª–∏ <@${interaction.options.get('user').value}>`, ephemeral: true })
                    fs.writeFileSync(`./src/dataBase/meets/${interaction.user.id}.json`, JSON.stringify(meet))

                    voiceChannel.send(`<@${interaction.options.get('user').value}> –≤—ã–≥–Ω–∞–ª–∏ –∏–∑ —Å–æ–±—Ä–∞–Ω–∏—è`)

                    voiceChannel.permissionOverwrites.delete(interaction.guild.members.cache.get(interaction.options.get('user').value));
                    fileLog(`[MEET] ${interaction.user.tag} –≤—ã–≥–Ω–∞–ª ${interaction.options.get('user').value} –∏–∑ —Å–æ–±—Ä–∞–Ω–∏—è`)
                } else {
                    interaction.reply({ content: `–≠—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –Ω–∞ —Å–æ–±—Ä–∞–Ω–∏–∏`, ephemeral: true })
                }
            } else {
                interaction.reply({ content: `–í—ã –Ω–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–æ–±—Ä–∞–Ω–∏—è`, ephemeral: true })
            }
        }

        // add user to meet
        else if (interaction.options._subcommand === 'add') {
            if (fs.existsSync(`./src/dataBase/meets/${interaction.user.id}.json`)) {
                let meet = JSON.parse(fs.readFileSync(`./src/dataBase/meets/${interaction.user.id}.json`))
                if (!meet.users_list.includes(interaction.options.get('user').value)) {
                    const voiceChannel = interaction.guild.channels.cache.get(meet.channel)
                // const user = await interaction.guild.members.cache.get(interaction.options.get('user').value)

                meet.users_list = [...meet.users_list, interaction.options.get('user').value];

                // user.send({
                //     content: `https://discord.com/channels/${interaction.guildId}/${await voiceChannel.id}`,
                //     embeds: [new EmbedBuilder()
                //         .setTitle(`üü© –í–∞—Å –¥–æ–±–∞–≤–∏–ª–∏ –≤ —Å–æ–±—Ä–∞–Ω–∏–µ!`)
                //         .setDescription(`–í–∞—Å –¥–æ–±–∞–≤–∏–ª <@${interaction.user.id}> –≤ —Å–æ–±—Ä–∞–Ω–∏–µ, –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ —Å–æ–±—Ä–∞–Ω–∏–∏ –Ω–∞–ø–∏—Å–∞–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ [–ø–æ —Å—Å—ã–ª–∫–µ](https://discord.com/channels/${interaction.guildId}/${await voiceChannel.id})`)
                //         .setColor(Colors.Green)
                //     ]
                // })
                interaction.reply({content: `–í—ã –¥–æ–±–∞–≤–∏–ª–∏ –≤ —Å–æ–±—Ä–∞–Ω–∏–µ <@${interaction.options.get('user').value}>`, ephemeral: true})
                fs.writeFileSync(`./src/dataBase/meets/${interaction.user.id}.json`, JSON.stringify(meet))

                voiceChannel.send(`<@${interaction.options.get('user').value}> –¥–æ–±–∞–≤–∏–ª–∏ –≤ —Å–æ–±—Ä–∞–Ω–∏–µ`)
                fileLog(`[MEET] ${interaction.user.tag} –¥–æ–±–∞–≤–∏–ª ${interaction.options.get('user').value} –≤ —Å–æ–±—Ä–∞–Ω–∏–µ`)
                voiceChannel.permissionOverwrites.create(interaction.options.get('user').value, PermissionsBitField.Flags.Connect)
                } else {
                    interaction.reply({content: `<@${interaction.options.get('user').value}> —É–∂–µ –µ—Å—Ç—å –≤ —Å–æ–±—Ä–∞–Ω–∏–∏`, ephemeral: true})
                }
                
            } else {
                interaction.reply({content: `–í—ã –Ω–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–æ–±—Ä–∞–Ω–∏—è <@${interaction.options.get('user').value}>`, ephemeral: true})
            }
        }

        // end meet
        else if (interaction.options._subcommand === 'end') {
            if (fs.existsSync(`./src/dataBase/meets/${interaction.user.id}.json`)) {
                let meet = JSON.parse(fs.readFileSync(`./src/dataBase/meets/${interaction.user.id}.json`))
                const voiceChannel = interaction.guild.channels.cache.get(meet.channel)

                const timeMeet = Date.now() - meet.time_start
                
                let bot = JSON.parse(fs.readFileSync(`./src/dataBase/bot.json`))
                    bot.state[bot.state.length - 1] = bot.state[bot.state.length - 1] + timeMeet
                    fs.writeFileSync(`./src/dataBase/bot.json`, JSON.stringify(bot))

                meetChannel.send(`<@${interaction.user.id}> –∑–∞–∫—Ä—ã–ª —Å–æ–±—Ä–∞–Ω–∏–µ, –æ–Ω–æ –¥–ª–∏–ª–æ—Å—å \`${Math.round(timeMeet / 60000 / 60)}—á, ${Math.round(timeMeet / 60000 % 60)}–º\``)

                voiceChannel.delete();
                await interaction.reply({content: `–í—ã —É–¥–∞–ª–∏–ª–∏ —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})
                fileLog(`[MEET] ${interaction.user.tag} —É–¥–∞–ª–∏–ª —Å–æ–±—Ä–∞–Ω–∏–µ`)
                meetEnd_message(interaction.client, interaction.user.id)
            } else {
                interaction.reply({content: `–í—ã –Ω–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})
            }
        }

        // info meet
        else if (interaction.options._subcommand === 'info') {
            if (fs.existsSync(`./src/dataBase/meets/${interaction.user.id}.json`)) {
                let meet = JSON.parse(fs.readFileSync(`./src/dataBase/meets/${interaction.user.id}.json`))
                const timeMeet = Date.now() - meet.time_start
                const embed = new EmbedBuilder()
                    .setTitle(`üü© –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–±—Ä–∞–Ω–∏–∏`)
                    .setDescription(`**–¢–µ–º–∞/—Ç–µ–º—ã:** ${meet.games_list.map(x => `\`${x}\``).join(', ')}\n**–í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:** \`${Math.round(timeMeet / 60000 / 60)}—á, ${Math.round(timeMeet / 60000 % 60)}–º\`\n**–£—á–∞—Å—Ç–Ω–∏–∫–∏:** ${meet.users_list.map(x => `<@${x}>`).join(', ')}`)
                    .setColor(Colors.Green)
                interaction.reply({embeds: [embed], ephemeral: true})
            } else {
                interaction.reply({content: `–í—ã –Ω–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})
            }
        }

        // change subject meet
        else if (interaction.options._subcommand === 'change') {
            if (fs.existsSync(`./src/dataBase/meets/${interaction.user.id}.json`)) {
                let meet = JSON.parse(fs.readFileSync(`./src/dataBase/meets/${interaction.user.id}.json`))
                const userData = JSON.parse(fs.readFileSync(`./src/dataBase/users/${interaction.user.id}.json`))
                
                const voiceChannel = interaction.guild.channels.cache.get(meet.channel)
                const subject = interaction.options.get('subject').value.split(',')

                voiceChannel.setName(`${userData.userName}: ${subject.join(', ')} id‚ôÇ${interaction.user.id}`)

                meet.games_list = subject

                fs.writeFileSync(`./src/dataBase/meets/${interaction.user.id}.json`, JSON.stringify(meet))

                interaction.reply({content: `–í—ã –∏–∑–º–µ–Ω–∏–ª–∏ —Ç–µ–º—É —Å–æ–±—Ä–∞–Ω–∏—è –Ω–∞: ${interaction.options.get('subject').value}`, ephemeral: true})
                fileLog(`[MEET] ${interaction.user.tag} –∏–∑–º–µ–Ω–∏–ª —Ç–µ–º—É —Å–æ–±—Ä–∞–Ω–∏—è –Ω–∞: ${interaction.options.get('subject').value}`)
            } else {
                interaction.reply({content: `–í—ã –Ω–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})
            }
        }
        
        // invite user to meet
        else if (interaction.options._subcommand === 'invite') {
            if (!fs.existsSync(`./src/dataBase/planMeets/${interaction.user.id}.json`)) {
                interaction.reply({content: `–í—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø–ª–∞–Ω —Å–æ–±—Ä–∞–Ω–∏—è`, ephemeral: true})
                return
            }
            let planMeet = JSON.parse(fs.readFileSync(`./src/dataBase/planMeets/${interaction.user.id}.json`))
            const user = interaction.options.get('user').value
            if (planMeet.users_invited.includes(user)) {
                interaction.reply({content: `–í—ã —É–∂–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`, ephemeral: true})
                return
            }
            planMeet.users_invited.push(user)
            fs.writeFileSync(`./src/dataBase/planMeets/${interaction.user.id}.json`, JSON.stringify(planMeet))
            interaction.reply({content: `–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ <@${user}> –≤ —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})

            const message = await interaction.channel.messages.fetch(planMeet.message_id)
            message.thread.send(`<@${user}> –≤—ã –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã —ç—Ç–æ —Å–æ–±—Ä–∞–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–∏—Ä–∏—Ç–µ —Å–º–æ–≥–ª–∏ –ª–∏ –≤—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –Ω–µ–º.`)
        } 

        // start meet
        else if (interaction.options._subcommand === 'start') {
            if (fs.existsSync(`./src/dataBase/meets/${interaction.user.id}.json`)) {
                interaction.reply({content: `–í—ã —É–∂–µ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})
                return
            }

            if (!fs.existsSync(`./src/dataBase/planMeets/${interaction.user.id}.json`)) {
                interaction.reply({content: `–í—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –ø–ª–∞–Ω —Å–æ–±—Ä–∞–Ω–∏—è`, ephemeral: true})
                return
            }

            meetStart(interaction.client, interaction.user.id)
            interaction.reply({content: `–í—ã –Ω–∞—á–∞–ª–∏ —Å–æ–±—Ä–∞–Ω–∏–µ`, ephemeral: true})
        }
    }
}