const { Events, ModalBuilder, ActionRowBuilder, TextInputBuilder, TextInputStyle, EmbedBuilder, Colors } = require('discord.js');
const { execute } = require('./ready');
const fs = require('fs');
const { ButtonBuilder } = require('@discordjs/builders');
const { fileLog } = require('../functions/logs');

module.exports = {
    name: Events.InteractionCreate,

    async execute(interaction) {
        if (interaction.customId === 'register' && !fs.existsSync(`./src/dataBase/requests/${interaction.user.id}.json`) ) {
            const modal = new ModalBuilder()
                .setTitle('–ó–∞—è–≤–∫–∞ –≤ –•–ê–ñ–ê–ë–£')
                .setCustomId('Moadlregister')
                .addComponents(new ActionRowBuilder().addComponents(new TextInputBuilder()
                    .setCustomId('name')
                    .setMinLength(2)
                    .setLabel('üÜî C–≤–æ—ë —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è')
                    .setPlaceholder('–ú–∞–∫—Å')
                    .setRequired(true)
                    .setStyle(TextInputStyle.Short)))
                .addComponents(new ActionRowBuilder().addComponents(new TextInputBuilder()
                    .setCustomId('happyDate')
                    .setMinLength(10)
                    .setMaxLength(10)
                    .setLabel('üéÇ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è')
                    .setPlaceholder('DD.mm.YYYY(19.02.2007)')
                    .setRequired(true)
                    .setStyle(TextInputStyle.Short)))
                .addComponents(new ActionRowBuilder().addComponents(new TextInputBuilder()
                    .setCustomId('discription')
                    .setMinLength(30)
                    .setMaxLength(500)
                    .setLabel('üåä –†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —Å–µ–±—è')
                    .setPlaceholder('–Ø —Ç–æ—Ç —Ç–æ —Ç–æ—Ç–∞, –∑–∞–Ω–∏–º–∞—é—Å—å —Ç–µ–º —Ç–∞ —Ç–µ–º. –£ –º–µ–Ω—è –µ—Å—Ç—å —Ç–∞–∫–∏–µ —Ç–æ —Ö–æ–±–±–∏..')
                    .setRequired(true)
                    .setStyle(TextInputStyle.Paragraph)))
                .addComponents(new ActionRowBuilder().addComponents(new TextInputBuilder()
                    .setCustomId('games')
                    .setLabel('üñ•Ô∏è –ò–≥—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –º–æ–∂–µ—à—å –∏–≥—Ä–∞—Ç—å(—á–µ—Ä–µ–∑ ,)')
                    .setPlaceholder('fortnite, cs:go, minecraft..')
                    .setRequired(true)
                    .setStyle(TextInputStyle.Paragraph)))
            interaction.showModal(modal)
        } else if (interaction.isModalSubmit()) {
            console.log(interaction.user.username);
            const games = interaction.fields.fields.get('games').value.split(',');
            const userData = JSON.stringify({
                userName: interaction.fields.fields.get('name').value,
                createEvent: {
                    setup1: [],
                    setup2: []
                },
                data: {
                    happyDate: interaction.fields.fields.get('happyDate').value,
                    discription: interaction.fields.fields.get('discription').value,
                    games: games,
                    android_games: []
                }
            });

            interaction.user.username = interaction.fields.fields.get('name').value

            fs.writeFileSync(`./src/dataBase/requests/${interaction.user.id}.json`, userData)
            const channelRequist = interaction.guild.channels.cache.get('1068554674296344626')

            channelRequist.send({content: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞! ||id:${interaction.user.id}||`, embeds: [new EmbedBuilder()
                .setTitle(`–ó–∞—è–≤–∫–∞ –æ—Ç ${interaction.fields.fields.get('name').value}`)
                .setDescription(`
                –ó–∞—è–≤–∫–∞ –±—É–¥–µ—Ç —Ä–∞—Å–º–æ—Ç—Ä–µ–Ω–∞, –µ—Å–ª–∏ –µ—ë –Ω–µ –æ–¥–æ–±—Ä—è—Ç —Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ –±—É–¥–µ—Ç(–ë—ã–≤–∞—é—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è)
                \`\`\`js\n0 –ò–º—è:    ${interaction.fields.fields.get('name').value}\n1 –û —Å–µ–±–µ: ${interaction.fields.fields.get('discription').value}\n2 –î—Ä:     ${interaction.fields.fields.get('happyDate').value}\n3 –ò–≥—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –∏–≥—Ä–∞—Ç—å:
                \n${games}\`\`\`
                `)
                .setColor(Colors.Grey)    
            ], components: [new ActionRowBuilder().addComponents([new ButtonBuilder()
                    .setLabel(`üê∏ –ü—Ä–∏–Ω—è—Ç—å`).setCustomId(`acceptRequist`).setStyle('3'),
                        new ButtonBuilder()
                    .setLabel(`ü§¨ –û—Ç–∫–ª–æ–Ω–∏—Ç—å`).setCustomId(`cancelRequist`).setStyle('4')
                ])]
            
            })

            interaction.reply({
                ephemeral: true,
                embeds: [new EmbedBuilder()
                    .setTitle('‚åö –û–∂–∏–¥–∞–π—Ç–µ')
                    .setDescription(`–í—ã –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –≤ —Ö–∞–∂–∞–±—É!\n–ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞..
                    `)
                    .setColor(Colors.Green)
                ]
            })
            
            console.log(userData);
            fileLog(`[QUERST] ${interaction.user.username}(${interaction.user.id}) –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –≤ —Ö–∞–∂–∞–±—É!`)
            
        } else if (await interaction.customId === 'acceptRequist') {
            if (await interaction.user.id !== '701572980332953631') {
                await interaction.reply({content: `–í—ã –Ω–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å! ||–ø–∞–¥–ª–∞ –Ω–µ —Ç—Ä–æ–∂||`, ephemeral: true});
                return
            };
            let userIdd = interaction.message.content.split(':');
            userIdd = userIdd[1].replace(`||`,``);

            const role = interaction.guild.roles.cache.find(role => role.name === "–ß–ª–µ–Ω —Ö–∞–∂–∞–±—ã")
            const requist = fs.readFileSync(`./src/dataBase/requests/${userIdd}.json`)
            

            (await interaction.guild.members.fetch(userIdd)).roles.add(role)

            await interaction.reply({content: `<@${userIdd}> –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!\n*–£ —Ç–µ–±—è –±–æ–ª—å—à–µ –Ω–µ—Ç—É –∑–∞—è–≤–æ–∫, –µ—Å–ª–∏ —Ç—ã –≤—ã–π–¥–µ—à—å –∏–ª–∏ —Ç–µ–±—è –≤—ã–≥–æ–Ω—è—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è —Ç—ã –Ω–µ —Å–º–æ–∂–µ—à—å*`});

            interaction.message.edit({content: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!(–ü—Ä–∏–Ω—è—Ç–æ)`, embeds: [new EmbedBuilder()
                .setTitle(`–ó–∞—è–≤–∫–∞ –æ—Ç ${requist.userName}`)
                .setDescription(`
                –ó–∞—è–≤–∫–∞ –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞, —Ç—ã –Ω–æ—Ä–º —á–µ–ª
                \`\`\`js\n0 –ò–º—è:    ${requist.userName}\n1 –û —Å–µ–±–µ: ${requist.data.discription}\n2 –î—Ä:     ${requist.data.happyDate}\n3 –ò–≥—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –∏–≥—Ä–∞—Ç—å:
                \n${requist.data.games}\`\`\`
                `)
                .setColor(Colors.Green)    
            ], components: [new ActionRowBuilder().addComponents([new ButtonBuilder()
                    .setLabel(`üê∏ –ü—Ä–∏–Ω—è—Ç—å`).setCustomId(`acceptRequist`).setStyle('3'),
                        new ButtonBuilder()
                    .setLabel(`ü§¨ –û—Ç–∫–ª–æ–Ω–∏—Ç—å`).setCustomId(`cancelRequist`).setStyle('4')
                ])]
            })

            fs.writeFileSync(`./src/dataBase/users/${userIdd}.json`, fs.readFileSync(`./src/dataBase/requests/${userIdd}.json`));
        } else if (await interaction.customId === 'cancelRequist') {
            if (await interaction.user.id !== '701572980332953631') {
                await interaction.reply({content: `–í—ã –Ω–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å! ||–ø–∞–¥–ª–∞ –Ω–µ —Ç—Ä–æ–∂||`, ephemeral: true});
                return
            };
            let userIdd = interaction.message.content.split(':');
            userIdd = userIdd[1].replace(`||`,``);
            const requist = JSON.parse(fs.readFileSync(`./src/dataBase/requests/${userIdd}.json`))
            console.dir(requist)

            await interaction.reply({content: `<@${userIdd}> –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!\n*–£ —Ç–µ–±—è –±–æ–ª—å—à–µ –Ω–µ—Ç—É –∑–∞—è–≤–æ–∫*`});

            interaction.message.edit({content: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!(–û—Ç–∫–ª–æ–Ω–µ–Ω–æ)`, embeds: [new EmbedBuilder()
                .setTitle(`–ó–∞—è–≤–∫–∞ –æ—Ç ${requist.userName}`)
                .setDescription(`
                –ó–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã –µ–±–ª–∞–Ω
                \`\`\`js\n0 –ò–º—è:    ${requist.userName}\n1 –û —Å–µ–±–µ: ${requist.data.discription}\n2 –î—Ä:     ${requist.data.happyDate}\n3 –ò–≥—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –∏–≥—Ä–∞—Ç—å:
                \n${requist.data.games}\`\`\`
                `)
                .setColor(Colors.Red)    
            ], components: [new ActionRowBuilder().addComponents([new ButtonBuilder()
                    .setLabel(`üê∏ –ü—Ä–∏–Ω—è—Ç—å`).setCustomId(`acceptRequist`).setStyle('3'),
                        new ButtonBuilder()
                    .setLabel(`ü§¨ –û—Ç–∫–ª–æ–Ω–∏—Ç—å`).setCustomId(`cancelRequist`).setStyle('4')
                ])]
            })
        }
    }
}