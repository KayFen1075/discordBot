const { Events, Client, ActionRowBuilder, ButtonBuilder, GatewayIntentBits, EmbedBuilder, PermissionsBitField, Permissions, MessageManager, Embed, Collection, Colors, Message } = require('discord.js')
const { game_table } = require('../functions/listFunc.js')
const { execute } = require('./ready')
const fs = require('fs');

module.exports = {
    name: Events.InteractionCreate,
    
    async execute(interaction) {
            
            const json = JSON.parse(fs.readFileSync('./src/dataBase/bot.json'));
            const messageId = json.message_list_id;
            let channel = await interaction.guild.channels.cache.get("1061827241031508121");
            let message = await channel.messages.fetch(messageId.id).catch(err => {
                console.error(err);
            });
            const interactionUser = interaction.user.id;

            if (interaction.customId === 'remove_pc_games') {
                let bot = JSON.parse(fs.readFileSync(`./src/dataBase/bot.json`, 'utf-8'));
        
                let userr = JSON.parse(fs.readFileSync(`./src/dataBase/users/${interactionUser}.json`, 'utf-8'));
                let filteredArray = userr.data.games.filter(x => !interaction.values.includes(x.trim()));
                userr.data.games = filteredArray;
        
                const userData = JSON.stringify(userr);
        
                await interaction.reply({content: `–£–¥–∞–ª–µ–Ω–Ω–æ: \`${interaction.values}\`, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è —Ç–∞–∫–∏–µ –∏–≥—Ä—ã: \`${filteredArray}\``, ephemeral: true})
                fs.writeFileSync(`./src/dataBase/users/${interactionUser}.json`, userData)
                
                bot.list_history = [`-üî¥ ${userr.userName} —É–¥–∞–ª–∏–ª –∏–∑ —Å–ø–∏—Å–∫–∞ ${interaction.values} (PC)\n`,bot.list_history[0],bot.list_history[1],bot.list_history[2],bot.list_history[3]]
                fs.writeFileSync(`./src/dataBase/bot.json`, JSON.stringify(bot))
                interaction.message.delete()
        
                message.thread.send({ 
                    content: `${userr.userName} —É–¥–∞–ª–∏–ª –∏–≥—Ä—É`,
                    embeds: [ new EmbedBuilder()
                        .setTitle('üî¥ –£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä—ã (PC)')
                        .setColor(Colors.Red)
                        .setDescription(`**${userr.userName}** —É–¥–∞–ª–∏–ª –∏–∑ —Å–ø–∏—Å–∫–∞ \`${interaction.values}\`(PC), –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —É –Ω–µ–≥–æ —Ç–∞–∫–∏–µ –∏–≥—Ä—ã:\n\`\`\`${userr.data.games}\`\`\``)
                        .setTimestamp(Date.now())
                    ] })
        
            } else if (interaction.customId === 'remove_android_games') {

                let bot = JSON.parse(fs.readFileSync(`./src/dataBase/bot.json`, 'utf-8'));
        
                let userr = JSON.parse(fs.readFileSync(`./src/dataBase/users/${interactionUser}.json`, 'utf-8'));
                let filteredArray = userr.data.android_games.filter(x => !interaction.values.includes(x));
                userr.data.android_games = filteredArray;
        
                const userData = JSON.stringify(userr);
        
                await interaction.reply({content: `–£–¥–∞–ª–µ–Ω–Ω–æ: \`${interaction.values}\`, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è —Ç–∞–∫–∏–µ –∏–≥—Ä—ã: \`${filteredArray}\``, ephemeral: true})
                fs.writeFileSync(`./src/dataBase/users/${interactionUser}.json`, userData)
                
                bot.list_history = [`-üî¥ ${userr.userName} —É–¥–∞–ª–∏–ª –∏–∑ —Å–ø–∏—Å–∫–∞ ${interaction.values} (Android)\n`,bot.list_history[0],bot.list_history[1],bot.list_history[2],bot.list_history[3]]
                fs.writeFileSync(`./src/dataBase/bot.json`, JSON.stringify(bot))
                interaction.message.delete()
        
                message.thread.send({ 
                    content: `${userr.userName} —É–¥–∞–ª–∏–ª –∏–≥—Ä—É`,
                    embeds: [ new EmbedBuilder()
                        .setTitle('üî¥ –£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä—ã (Android)')
                        .setColor(Colors.Red)
                        .setDescription(`**${userr.userName}** —É–¥–∞–ª–∏–ª –∏–∑ —Å–ø–∏—Å–∫–∞ \`${interaction.values}\`(Android), –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —É –Ω–µ–≥–æ —Ç–∞–∫–∏–µ –∏–≥—Ä—ã:\n\`\`\`${userr.data.android_games}\`\`\``)
                        .setTimestamp(Date.now())
                    ] })
            }
            async function updateList() {
                const json = JSON.parse(fs.readFileSync('./src/dataBase/bot.json'));
                const messageId = json.message_list_id;
                let channel = await interaction.guild.channels.cache.get("1061827241031508121");
                let message = await channel.messages.fetch(messageId.id).catch(err => {
                    console.error(err);
                });
                const gameTable = await game_table()

                let user_name_description = [];
                gameTable[0].forEach((user, i) => user_name_description.push({ name: user, value: `\`\`\`js\n${gameTable[1][i]}\`\`\``, inline: true }))

                const embed_components = {
                    embeds: [
                    new EmbedBuilder()
                        .setTitle('üßëüèæ‚Äç‚ù§Ô∏è‚Äçüßëüèø –°–ø–∏—Å–æ–∫ –∏–≥—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')   
                        .addFields(user_name_description)
                        .setColor(Colors.Green)
                    ,    
                    new EmbedBuilder()
                        .setTitle('üñ•Ô∏è –ü–ö –∏–≥—Ä—ã')
                        .setDescription(gameTable[2]+gameTable[3])
                        .setColor(Colors.Green)
                        .setTimestamp(Date.now())
                    ,
                    new EmbedBuilder()
                            .setTitle(`‚åõ –ö–æ—Ä–æ—Ç–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è:`)
                            .setColor(Colors.Green)
                            .setDescription(`${gameTable[4]}**–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–ø–∏—Å–∫–∞:**\n\`/list add \${game} ?{android} ?{user}\` - –î–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä—É, –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ \`,\`. –ü–∏—Å–∞—Ç—å 1 –≤ 1, –∫—Ä–æ–º–µ –±–æ–ª—å—à–∏—Ö –±—É–∫–≤ –Ω–∞ –Ω–∏—Ö –ø–æ—Ñ–∏–≥\n\`/list remove\` - –£–¥–∞–ª–∏—Ç—å –∏–≥—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞, –≤—ã–±—Ä–∞—Ç—å –∏–∑ –º–µ–Ω—é.\n\`android\` - –º–æ–∂–µ—Ç –±—ã—Ç—å true –∏–ª–∏ false, –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ flase.\n\`user\` - –≤–ª–∏—è—Ç—å –Ω–∞ —á—É–∂–æ–π —Å–ø–∏—Å–æ–∫ –∏–≥—Ä.`)
                    ], components: [new ActionRowBuilder()
                            .addComponents([
                                new ButtonBuilder()
                                    .setCustomId('start_confern_1')
                                    .setLabel('üöÄ –ù–∞—á–∞—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ')
                                    .setStyle('3'),
                                new ButtonBuilder()
                                    .setCustomId('plan_confern_1')
                                    .setDisabled(true)
                                    .setLabel('‚è≥ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ')
                                    .setStyle('1'),
                                new ButtonBuilder()
                                    .setCustomId('photo_confern')
                                    .setDisabled(true)
                                    .setLabel('üì∏ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ')
                                    .setStyle('1')
                            ])]
                }
                if (!message) {
                    message = await channel.send(embed_components);
                    json.message_list_id = message;
            
                    fs.writeFileSync('./src/dataBase/bot.json', JSON.stringify(json));
                    await message.startThread({
                        name: 'üìô List logs',
                        autoArchiveDuration: 60,
                        reason: '–õ–æ–≥–∏ —Å–ø–∏—Å–∫–∞, –ø—Ä–æ—Å—å–±–∞ —Å—é–¥–∞ –Ω–µ –ø–∏—Å–∞—Ç—å.\n\nüü¢ - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫\nüî¥ - –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞',
                    });
                    await message.thread.send('–ù–∞—á–∞–ª–æ –ª–æ–≥–æ–≤!')
                } else {
                    message.edit(embed_components);
                }
            }
            await updateList()
            async function updateRegister() {
                const json = JSON.parse(fs.readFileSync('./src/dataBase/bot.json'));
                let channel = await interaction.guild.channels.cache.get("1061827016518815845");
                let message
    
                const messageId = json.message_register_id;
                if (messageId !== null) {
                    message = await channel.messages.fetch(messageId.id).catch(err => {
                        console.error(err);
                    });
                } else {
                    message = false
                }
                
                
                const gameTable = await game_table()

            let user_name_description = [];
            gameTable[0].forEach((user, i) => user_name_description.push({ name: user, value: `\`\`\`js\n${gameTable[1][i]}\`\`\``, inline: true }))

            
            const embed_components = {
                embeds: [new EmbedBuilder()
                    .setTitle('üê∏ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É ü™™')
                    .setDescription(`**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ö–∞–∂–∞–±—É, —ç—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—â–µ–Ω–∏—è!**\n\n–û—Å–Ω–æ–≤–Ω–∞—è —Å—É—Ç—å —Ö–∞–∂–∞–±—ã —ç—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–∏–π, –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–æ–≤(–≤—Å–µ –∏–≥—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É —Ä–∞–∑–Ω—ã—Ö –ª—é–¥–µ–π), –≥–æ–ª–æ—Å–æ–≤—ã–µ —Ñ–∏—à–∫–∏, –Ω–æ–≤–æ—Å—Ç–∏ –æ —Ä–∞–∑–¥–∞—á–∞—Ö –∏–≥—Ä –∏ —Ç–∞–∫ –∂–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.\n–í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –±–æ—Ç–∞ <@1060761793204596846>, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ –µ—Å—Ç—å –∫–∞–Ω–∞–ª *–µ—Å–ª–∏ –±–æ—Ç –∑–¥–æ—Ö*. –ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –æ–Ω –º–æ–∂–µ—Ç –ø–æ–º–æ–≥–∞—Ç—å –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –º–Ω–æ–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏.\n\n–í–æ—Ç –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∏ –∏—Ö –∏–≥—Ä—ã, –º–± –∫–æ–º—É-—Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è:\n`)
                    .addFields(user_name_description)
                    .setColor(Colors.Green)
                    .setTimestamp(Date.now()),
                    new EmbedBuilder()
                        .setTitle('üñ•Ô∏è –ü–ö –∏–≥—Ä—ã')
                        .setDescription(gameTable[2]+gameTable[3])
                        .setColor(Colors.Green)
                        .setTimestamp(Date.now())
                ], components: [new ActionRowBuilder()
                        .addComponents([
                            new ButtonBuilder()
                                .setCustomId('register')
                                .setLabel('‚úçÔ∏è –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
                                .setStyle('3')
                        ])]
            }
            if (!message) {
                message = await channel.send(embed_components);
                json.message_register_id = message;
        
                fs.writeFileSync('./src/dataBase/bot.json', JSON.stringify(json));
            } else {
                message.edit(embed_components);
            }
            }
            updateRegister()
        }
}