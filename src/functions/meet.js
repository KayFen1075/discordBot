const fs = require('fs');
const { fileLog } = require('./logs');
const config = require('../config.json');
const { ChannelType, PermissionsBitField, Colors, ButtonStyle, ThreadAutoArchiveDuration } = require('discord.js');
const { ActionRowBuilder, ButtonBuilder, EmbedBuilder } = require('@discordjs/builders');
const { giveAdvanced } = require('./giveAdvanced');
const { RoundTime } = require('../functions/Mthon');
const { log } = require('console');

function truncateText(text) {
    if (text.length > 60) {
      return text.substring(0, 60) + "..";
    }
    return text;
  }

async function meetCreate(interaction, client, creator_id, subjects, users, xpBoost) {
    console.log(creator_id, subjects, users);
    if (fs.existsSync(`./src/dataBase/meets/${creator_id}.json`) || fs.existsSync(`./src/dataBase/planMeets/${creator_id}.json`)) {
        console.log(`[ERROR] ${creator_id} —É–∂–µ —Å–æ–∑–¥–∞–ª –≤—Å—Ç—Ä–µ—á—É –∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É`);
        fileLog(`[ERROR] meetCreate: ${creator_id} —É–∂–µ —Å–æ–∑–¥–∞–ª –≤—Å—Ç—Ä–µ—á—É –∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É`);
        return false;
    }

    if (!creator_id || !subjects || !users) {
        console.log(`[ERROR] meetCreate: –ù–µ –≤—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –±—ã–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã`);
        fileLog(`[ERROR] meetCreate: –ù–µ –≤—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –±—ã–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã`);
        return false;
    }

    let userData = JSON.parse(fs.readFileSync(`./src/dataBase/users/${creator_id}.json`));

    const emojis = ['üî•', 'üí•', 'ü´°', 'üß®', 'üê∏', 'üê∑', 'üêµ', 'üò∫', 'ü´•', 'üåà', 'üåü', 'üåô', 'üåö', 'üåù']
    const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)]

    let userList = [];
    let perms = [];
    const guild = await client.guilds.cache.get("1060755232109379644");
    const meets_channel = await guild.channels.cache.get(config.channels_id.meets);

    // create voice channel
    const voiceChannel = await guild.channels.create({
        name: `${randomEmoji}${userData.userName}: ${truncateText(userData.createEvent.setup1.toString())} id‚ôÇ${creator_id}`,
        type: ChannelType.GuildVoice,
    }); await voiceChannel.setParent('1060755232583319665');


    // get perms and userList
    await users.forEach(async element => {
        const user = await guild.members.cache.get(element);
        userList.push(`<@${user.user.id}>`)
        await perms.push({
            id: element,
            allow: [PermissionsBitField.Flags.Connect],
        },
            {
                id: creator_id,
                allow: [PermissionsBitField.Flags.Connect],
            },
            {
                id: guild.id,
                deny: [PermissionsBitField.Flags.Connect],
            })
    });

    let xpBoostText = '';
    xpBoost ? xpBoostText = `\n> –í —ç—Ç–æ–º —Å–æ–±—Ä–∞–Ω–∏–∏ –¥–µ–π—Å—Ç–≤—É–µ—Ç –±—É—Å—Ç –æ–ø—ã—Ç–∞ –Ω–∞ \`${xpBoost}x\`` : xpBoostText = '';

    const meet_message = await meets_channel.send({
        content: `<@${creator_id}> —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–ª —Å–æ–±—Ä–∞–Ω–∏–µ –∏ –ø–æ–∑–≤–∞–ª: ${userList.join(', ')}`,
        embeds: [new EmbedBuilder()
            .setTitle(`${randomEmoji} –°–æ–∑–¥–∞–Ω–æ —Å–æ–±—Ä–∞–Ω–∏–µ!`)
            .setDescription(`${userData.userName} —Å–æ–∑–¥–∞–ª —Å–æ–±—Ä–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—ã: \`${subjects.join(', ')}\`!\n–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–Ω–∏—è: **<@${creator_id}>, ${userList.join(', ')}**\n[–û—Ç–∫—Ä—ã—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–∞ –ø—Ä—è–º—É—é –≤ –¥–∏—Å–∫–æ—Ä–¥–µ](https://discord.com/channels/${guild.id}/${await voiceChannel.id})${xpBoostText}`)
            .setColor(Colors.Green)
            .setTimestamp(Date.now())
            .setFooter({ text: `‚ö†Ô∏è –°–æ–±—Ä–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç –µ—Å–ª–∏ –≤ –Ω—ë–º –Ω–∏–∫–æ–≥–æ –Ω–µ –æ–∫–∞–∂–µ—Ç—å—Å—è`})
        ],
        components: [new ActionRowBuilder().addComponents([
            new ButtonBuilder()
                .setLabel('–ó–∞–π—Ç–∏ –ø–æ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–µ')
                .setStyle(ButtonStyle.Link)
                .setURL(`https://discord.com/channels/${guild.id}/${await voiceChannel.id}`),
            new ButtonBuilder()
               .setCustomId(`leave_meet‚òº${creator_id}`)
               .setLabel('–ü–æ–∫–∏–Ω—É—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ')
               .setStyle(ButtonStyle.Danger)
        ])]
    })

    await voiceChannel.permissionOverwrites.set(await perms)

    userData.createEvent.setup2 = users;
    fs.writeFileSync(`./src/dataBase/users/${creator_id}.json`, JSON.stringify(userData))
    await interaction?.message.edit({
        content: `<@${creator_id}> —Å–æ–±—Ä–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—å—Å—è, –ª–∞–¥–Ω–æ –æ–±–º–∞–Ω—ã–≤–∞—é. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —è –Ω–∞—à—ë–ª –ø—É–ª—å—Ç –æ—Ç —è–¥–µ—Ä–∫–∏ –∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≥–æ–≤–æ—Ç–æ–≤–∏–ª–æ—Å—å –Ω–∞–ø–æ–¥–µ–Ω–∏–µ –Ω–∞ –ë–µ–ª–æ—Ä—É—Å—å, —è –≤–æ—Ç –∫–∞—Ä—Ç—É –ø—Ä–∏–Ω–µ—Å —Å–µ–π—á–∞—Å –ø–æ–∫–∞–∂—É üó∫Ô∏è.. –í–æ—Ç –ø–æ—ç—Ç–æ–º—É **Z** –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∑–∞–ø—É—Å–∫–∞—é —è–¥–µ—Ä–∫—É –Ω–∞ —Ö—É–π;!; !;!;!;!;!;;!;!`,
        embeds: [new EmbedBuilder()
            .setTitle(`üöß –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–∏—è`)
            .setColor(Colors.Yellow)
            .setDescription(`–í—ã –≤—ã–±—Ä–∞–ª–∏: \n${await userList}\n\`\`\`${userData.createEvent.setup1}\`\`\`\n —Å–∫–æ—Ä–æ –Ω–∞—á–Ω—ë—Ç—å—Å—è —Å–æ–±—Ä–∞–Ω–∏–µ`)],
        tts: true,
        components: [new ActionRowBuilder().addComponents([
            new ButtonBuilder()
                .setCustomId('happy')
                .setLabel('–ì–æ—Ç–æ–≤') 
                .setStyle(ButtonStyle.Success)
        ])]
    })

    let meet = {
        users_list: users,
        games_list: subjects,
        channel: voiceChannel.id,
        message_id: meet_message.id,
        time_start: Date.now(),
        emoji: randomEmoji,
        xp_boost: xpBoost,
    };

    // create thread
    const thread = await meet_message.startThread({
        name: `${randomEmoji} –õ–æ–≥–∏ —Å–æ–±—Ä–∞–Ω–∏—è ${userData.userName}`,
        autoArchiveDuration: ThreadAutoArchiveDuration.OneDay,
    });

    thread.send(`<@${creator_id}> —Å–æ–∑–¥–∞–ª —Å–æ–±—Ä–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—ã: \`${subjects.join(', ')}\`!\n–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–Ω–∏—è: **<@${creator_id}>, ${userList.join(', ')}**\n–ó–∞–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –º–æ–∂–Ω–æ [—á–µ—Ä–µ–∑ —ç—Ç—É —Å—Å—ã–ª–∫—É](https://discord.com/channels/${guild.id}/${await voiceChannel.id})`)
    voiceChannel.send(`<@${creator_id}> —Å–æ–∑–¥–∞–ª —Å–æ–±—Ä–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—ã: \`${subjects.join(', ')}\`!\n–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–Ω–∏—è: **<@${creator_id}>, ${userList.join(', ')}**`)

    giveAdvanced(client, "Hello world", creator_id)
    
    setTimeout(() => {
        interaction?.message.delete()
    }, 5000)
    const chech_users = setTimeout(async () => {
        const members = await voiceChannel.members.filter(member => !member.user.bot);
        if (members.size === 0 && fs.existsSync(`./src/dataBase/meets/${creator_id}.json`)) {
            voiceChannel.delete()
            const timeMeet = Date.now() - meet.time_start

            let bot = JSON.parse(fs.readFileSync(`./src/dataBase/bot.json`))
            bot.state[bot.state.length - 1] = bot.state[bot.state.length - 1] + timeMeet
            fs.writeFileSync(`./src/dataBase/bot.json`, JSON.stringify(bot))

            meets_channel.send(`<@${creator_id}> –≤–∞—à–µ —Å–æ–±—Ä–∞–Ω–∏–µ –±—ã–ª–æ –ø—É—Å—Ç—ã–º, –ø–æ—ç—Ç–æ–º—É —è –µ–≥–æ –∑–∞–∫—Ä—ã–ª, –æ–Ω–æ –¥–ª–∏–ª–æ—Å—å \`${Math.round(timeMeet / 60000 / 60)}—á, ${Math.round(timeMeet / 60000 % 60)}–º\`, —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ —É—á–∏—Ç—ã–≤–∞–ª–æ—Å—å —Ç–∞–∫ –∫–∞–∫ –≤ –Ω—ë–º –Ω–µ –∫–æ–≥–æ –Ω–µ –±—ã–ª–æ.`)
            meetEnd_message(client, creator_id)
            clearInterval(chech_users)
        }
    }, 1800000)
    interaction?.reply({ content: 'GayPaty StaRt', ephemeral: true })
    fs.writeFileSync(`./src/dataBase/meets/${creator_id}.json`, JSON.stringify(meet))
}



async function meetStart(client, creator_id, xpBoost) {

    if (fs.existsSync(`./src/dataBase/planMeets/${creator_id}.json`)) {
        let planMeet = JSON.parse(fs.readFileSync(`./src/dataBase/planMeets/${creator_id}.json`))
        let userData = JSON.parse(fs.readFileSync(`./src/dataBase/users/${creator_id}.json`))

        let users = [];

        users.push(...planMeet.users_accepted, ...planMeet.users_later)

        users = users.map((item) => {
            return item.toString()
        })

        let userList = [];
        let perms = [];
        const guild = await client.guilds.cache.get("1060755232109379644");
        const meets_channel = await guild.channels.cache.get(config.channels_id.meets);

        // create voice channel
        const voiceChannel = await guild.channels.create({
            name: `${planMeet.emoji}${userData.userName}: ${truncateText(planMeet.subjects.join(', '))} id‚ôÇ${creator_id}`,
            type: ChannelType.GuildVoice,
        }); await voiceChannel.setParent('1060755232583319665');

        console.log(users);
        // get perms and userList
        await users.forEach(async element => {
            const user = await guild.members.fetch(element);
            userList.push(`<@${user.user.id}>`)
            await perms.push({
                id: element,
                allow: [PermissionsBitField.Flags.Connect],
            },
                {
                    id: creator_id,
                    allow: [PermissionsBitField.Flags.Connect],
                },
                {
                    id: guild.id,
                    deny: [PermissionsBitField.Flags.Connect],
                })
        });

        let xpBoostText = '';
        xpBoost ? xpBoostText = `\n> –í —ç—Ç–æ–º —Å–æ–±—Ä–∞–Ω–∏–∏ –¥–µ–π—Å—Ç–≤—É–µ—Ç –±—É—Å—Ç –æ–ø—ã—Ç–∞ –Ω–∞ \`${xpBoost}x\`` : xpBoostText = '';

        const message = await meets_channel.messages.fetch(planMeet.message_id)

        const users_not_reacted = planMeet.users_invited.filter((item) => !users.includes(item));

        // ping users not reacted
        let ping_users_not_reacted = []
        users_not_reacted.forEach((item) => {
            ping_users_not_reacted.push(`<@${item}>`)
        })

        let loxi = ''
        ping_users_not_reacted.length > 0 ? loxi = `\n\n–ê—É—Ç–∏—Å—Ç—ã –•–ê–ñ–ê–ë–´: ${ping_users_not_reacted.join(', ')}.` : loxi = ''


        await message.edit({
            content: `<@${creator_id}> —Å–æ–±—Ä–∞–Ω–∏–µ –Ω–∞—á–∏–ª–æ—Å—å! –£—á–∞—Å—Ç–Ω–∏–∫–∏: ${userList.join(', ')}`,
            embeds: [new EmbedBuilder()
                .setTitle(`${planMeet.emoji} –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!`)
                .setDescription(`${userData.userName} —Å–æ–∑–¥–∞–ª —Å–æ–±—Ä–∞–Ω–∏–µ –Ω–∞ —Ç–µ–º—ã: \`${planMeet.subjects.join(', ')}\`!\n–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–Ω–∏—è: **<@${creator_id}>, ${userList.join(', ')}**\n[–û—Ç–∫—Ä—ã—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–∞ –ø—Ä—è–º—É—é –≤ –¥–∏—Å–∫–æ—Ä–¥–µ](https://discord.com/channels/${guild.id}/${await voiceChannel.id})${xpBoostText}${loxi}`)
                .setColor(Colors.Green)
                .setTimestamp(Date.now())
                .setFooter({ text: `‚ö†Ô∏è –°–æ–±—Ä–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç –µ—Å–ª–∏ –≤ –Ω—ë–º –Ω–∏–∫–æ–≥–æ –Ω–µ –æ–∫–∞–∂–µ—Ç—å—Å—è` })
            ],
            components: [new ActionRowBuilder().addComponents([
                new ButtonBuilder()
                    .setLabel('–ó–∞–π—Ç–∏ –ø–æ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–µ')
                    .setStyle(ButtonStyle.Link)
                    .setURL(`https://discord.com/channels/${guild.id}/${await voiceChannel.id}`),
                new ButtonBuilder()
                    .setCustomId(`leave_meet‚òº${creator_id}`)
                    .setLabel('–ü–æ–∫–∏–Ω—É—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ')
                    .setStyle(ButtonStyle.Danger)
            ])]
        })

        await message.thread.send({
            content: `üî• <@${creator_id}> –í–∞—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ –±—ã–ª–æ –Ω–∞—á–∞—Ç–æ! –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–Ω–∏—è: ${userList.join(', ')}`,
        })
        await voiceChannel.permissionOverwrites.set(await perms)

        const meet = {
            users_list: users,
            games_list: planMeet.subjects,
            channel: voiceChannel.id,
            message_id: planMeet.message,
            time_start: Date.now(),
            emoji: planMeet.emoji,
            xp_boost: xpBoost,
        }

        fs.writeFileSync(`./src/dataBase/meets/${creator_id}.json`, JSON.stringify(meet))
        fs.writeFileSync(`./src/dataBase/users/${creator_id}.json`, JSON.stringify(userData))
        fs.unlinkSync(`./src/dataBase/planMeets/${creator_id}.json`)

    }
}

async function checkPlans(client) {
    const date = new Date();

    planMeets = fs.readdirSync(`./src/dataBase/planMeets/`);
    planMeets.forEach(async element => {
        let planMeet = JSON.parse(fs.readFileSync(`./src/dataBase/planMeets/${element}`))
        let userData = JSON.parse(fs.readFileSync(`./src/dataBase/users/${element}`))

        element = element.replace('.json', '')

        let users = [];
        users.push(...planMeet.users_accepted, ...planMeet.users_later, ...planMeet.users_declined, ...planMeet.users_someone)
        let ping_users = []
        planMeet.users_invited.forEach((item) => {
            ping_users.push(`<@${item}>`)
        })

        const users_not_reacted = planMeet.users_invited.filter((item) => !users.includes(item));

        // ping users not reacted
        let ping_users_not_reacted = []
        users_not_reacted.forEach((item) => {
            ping_users_not_reacted.push(`<@${item}>`)
        })
        // console.log('--------------');
        // console.log(planMeet?.ping_45_min);
        // console.log(users_not_reacted.length > 0);
        // console.log(planMeet.time - 45 *60*1000 <= date.getTime());
        // ping users not reacted 1 hour before meet
        if (!planMeet?.ping_1_hour && users_not_reacted.length > 0 && planMeet.time - 60 *60*1000 <= date.getTime()) {
            const channel = await client.channels.fetch(config.channels_id.meets);
            const message = await channel.messages.fetch(planMeet.message_id)

            await message.thread.send({
                content: `‚ö†Ô∏è ${ping_users_not_reacted.join(', ')} –≤—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∫ —Å–æ–±—Ä–∞–Ω–∏—é! –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç —Å–º–æ–∂–µ—Ç–µ –≤—ã –ø—Ä–∏–π—Ç–∏ –∏–ª–∏ –Ω–µ —Å–º–æ–∂–µ—Ç–µ, —á–µ—Ä–µ–∑ —á–∞—Å –Ω–∞—á–Ω—ë—Ç—å—Å—è —Å–æ–±—Ä–∞–Ω–∏–µ –≤–∞—Å —Ç—É–¥–∞ –Ω–µ –¥–æ–±–∞–≤—è—Ç!`,
            })
            planMeet.ping_1_hour = true
            fs.writeFileSync(`./src/dataBase/planMeets/${element}.json`, JSON.stringify(planMeet))
            return
        }

        // ping users not reacted 45 minutes before meet
        else if (!planMeet?.ping_45_min && users_not_reacted.length > 0 && planMeet.time - 45 *60*1000 <= date.getTime()) {
            const channel = await client.channels.fetch(config.channels_id.meets);
            const message = await channel.messages.fetch(planMeet.message_id)

            await message.thread.send({
                content: `‚ö†Ô∏è ${ping_users_not_reacted.join(', ')} –∞–ª—ë –µ–±–∞—Ç—å, –∫–æ–Ω—á–∞ –∑–∞—Å–æ—Ö—à–∞—è —Ç—ã –±–ª—è—Ç—å –º–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –Ω–∞ –≤–∞—Ä–∏–∞–Ω—Ç —Å–º–æ–∂–µ—à—å –ø—Ä–∏–π—Ç–∏ –∏–ª–∏ –Ω–µ—Ç, —á–µ—Ä–µ–∑ 45 –º–∏–Ω—É—Ç –Ω–∞—á–Ω—ë—Ç—å—Å—è —Å–æ–±—Ä–∞–Ω–∏–µ –≤–∞—Å —Ç—É–¥–∞ –Ω–µ –¥–æ–±–∞–≤—è—Ç!\n\n–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º —è–∑—ã–∫–æ–º –Ω–∞–ø–∏—Å–∞–Ω–æ–∂–µ \`–ù–∞–∂–º–∏—Ç–µ –≤—ã–±–∏—Ä–∏—Ç–µ —Å–º–æ–∂–µ—Ç–µ –≤—ã –ø—Ä–∏–π—Ç–∏ –∏–ª–∏ –Ω–µ—Ç. –≠–¢–û –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û!\` –∞ —Ç—ã —Ö—É–π–Ω—è –Ω–µ –º–æ–∂–µ—à—å –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É –Ω–∞–∂–∞—Ç—å —á–º–æ –µ–±–∞–Ω–æ–µ –±–ª—è—Ç—å!\n> P.S. –¢–µ–∫—Å—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏`,
            })
            planMeet.ping_45_min = true
            fs.writeFileSync(`./src/dataBase/planMeets/${element}.json`, JSON.stringify(planMeet))
            return
        }

        // ping users not reacted 2 minutes before meet
        else if (!planMeet?.ping_2_min && users_not_reacted.length > 0 && planMeet.time - 2 *60*1000 <= date.getTime()) {
            const channel = await client.channels.fetch(config.channels_id.meets);
            const message = await channel.messages.fetch(planMeet.message_id)

            await message.thread.send({
                content: `‚ö†Ô∏è ${ping_users_not_reacted.join(', ')} –Ω—É —Ç—ã –∏ –ª–æ—Ö. –ß–µ—Ä–µ–∑ 2–º —Å–æ–±—Ä–∞–Ω–∏–µ, –∞ —Ç—ã –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç. –¢—ã –µ–±–∞–Ω—ã–π —á–º–æ, —Ç—ã –µ–±–∞–Ω—ã–π –ª–æ—Ö, —Ç—ã –µ–±–∞–Ω—ã–π –ø–∏–¥–æ—Ä, —Ç—ã –µ–±–∞–Ω—ã–π –≥–µ–π, —Ç—ã –µ–±–∞–Ω—ã–π —Ç—Ä–∞–Ω—Å, —Ç—ã –µ–±–∞–Ω—ã–π –∫–ª–æ—É–Ω, —Ç—ã –µ–±–∞–Ω—ã–π –º—É–¥–∞–∫!\n**–Ø –≤—ã–¥–∞—é —Ç–µ–±–µ –ø—Ä–∏–¥—É–ø—Ä–∏–∂–¥–µ–Ω–∏–µ, –≤ —Å–ª–µ–¥—É—â–∏–π —Ä–∞–∑ –∑–∞–±–∞–Ω—é –Ω–∞—Ö—É–π!**`,
            })
            planMeet.ping_2_min = true
            fs.writeFileSync(`./src/dataBase/planMeets/${element}.json`, JSON.stringify(planMeet))
            return
        }

        // ping users 30 min before meet
        else if (planMeet.time - 1800000 <= date.getTime() && !planMeet.ping_30_min) {
            const channel = await client.channels.fetch(config.channels_id.meets);
            const message = await channel.messages.fetch(planMeet.message_id)

            await message.thread.send({
                content: `ü•Ç <@${element}> –í–∞—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ –Ω–∞—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç! –£—á–∞—Å—Ç–Ω–∏–∫–∏: ${ping_users.join(', ')}!`,
            })
            planMeet.ping_30_min = true
            fs.writeFileSync(`./src/dataBase/planMeets/${element}.json`, JSON.stringify(planMeet))
            return
        }
        // ping users 5 min before meet
        else if (planMeet.time - 300000 <= date.getTime() && !planMeet.ping_5_min) {
            const channel = await client.channels.fetch(config.channels_id.meets);
            const message = await channel.messages.fetch(planMeet.message_id)

            await message.thread.send({
                content: `ü•≥ <@${element}> –í–∞—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ –Ω–∞—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç! –£—á–∞—Å—Ç–Ω–∏–∫–∏: ${ping_users.join(', ')}!`,
            })
            planMeet.ping_5_min = true
            fs.writeFileSync(`./src/dataBase/planMeets/${element}.json`, JSON.stringify(planMeet))
            return
        }

        switch (planMeet.type) {
            case 'allReady': {
                if (planMeet.time <= date.getTime() && users_not_reacted.length == 0) {
                    meetStart(client, element, planMeet.xpBoost)
                } else if (planMeet.time <= date.getTime() && users_not_reacted.length != 0) {
                    const channel = await client.channels.fetch(config.channels_id.meets);
                    const message = await channel.messages.fetch(planMeet.message_id)

                    await message.thread.send({
                        content: `‚ö†Ô∏è <@${element}> –í–∞—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ –±—ã–ª–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ! –ù–µ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–Ω–∏—è –ø—Ä–∏–Ω—è–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ! –í—ã –º–æ–∂–µ–µ—Ç –Ω–∞—á–∞—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ –≤—Ä—É—á–Ω—É—é –∫–æ–º–∞–Ω–¥–æ–π \`/meet start\` ${ping_users.join(', ')}\n> –°–æ–±—Ä–∞–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç!`,
                    })
                    planMeet.type = 'end'
                    fs.writeFileSync(`./src/dataBase/planMeets/${element}.json`, JSON.stringify(planMeet))
                    return
                }
            } break;
			—Ñ
            case 'time': {
                if (planMeet.time <= date.getTime()) {
                    meetStart(client, element, planMeet.xpBoost)
                    return
                }
            } break;

            case 'command': {
                if (planMeet.time <= date.getTime()) {
                    const channel = await client.channels.fetch(config.channels_id.meets);
                    const message = await channel.messages.fetch(planMeet.message_id)

                    await message.thread.send({
                        content: `‚ö° <@${element}> –í–∞—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ –±—ã–ª–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ! –í—ã –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏ —Å–æ–±—Ä–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π \`/meet start\` ${ping_users.join(', ')}\n> –°–æ–±—Ä–∞–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–æ–±—Ä–∞–Ω–∏–µ!`,
                    })

                    setTimeout(async () => {
                        if (fs.existsSync(`./src/dataBase/planMeets/${element}.json`)) {
                            const channel = await client.channels.fetch(config.channels_id.meets);
                            const message = await channel.messages.fetch(planMeet.message_id)
                            
                            await message.thread.send({
                                content: `‚ùå <@${element}> –≤–∞—à–µ —Å–æ–±—Ä–∞–Ω–∏–µ –Ω–µ –±—ã–ª–æ –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ 2 —á–∞—Å–æ–≤! –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ.`,
                            })
                        
                            fs.unlinkSync(`./src/dataBase/planMeets/${element}.json`)
                            }
                    }, 120 *60*1000)

                    planMeet.type = 'end'
                    fs.writeFileSync(`./src/dataBase/planMeets/${element}.json`, JSON.stringify(planMeet))
                    return
                }
            } break;
        }
    });
}

async function meetEnd_message(client, creator_id) {
	if (!fs.existsSync(`./src/dataBase/meets/${creator_id}.json`)) return
	const meet = JSON.parse(fs.readFileSync(`./src/dataBase/meets/${creator_id}.json`))
	const user = JSON.parse(fs.readFileSync(`./src/dataBase/users/${creator_id}.json`))

	console.log(meet);

	const channel = await client.channels.fetch(config.channels_id.meets);
	const message = await channel.messages.fetch(meet.message_id)	

	console.log(channel);

	const time = new Date(meet.time_start)
	const now = new Date()

	const timeDiff = now.getTime() - time.getTime()

	const hours = Math.floor(timeDiff / (1000 * 60 * 60))
	const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60))

	const ping_users = []
	meet.users_list.forEach(element => {
		ping_users.push(`<@${element}>`)
	});

	message.thread.send({
		content: `üõë <@${creator_id}> —Å–æ–±—Ä–∞–Ω–∏–µ –±—ã–ª–æ –∑–∞–≤–µ—Ä—à–µ–Ω—Ä–æ, –æ–Ω–æ –ø—Ä–æ–¥–ª–∏–ª–æ—Å—å \`${RoundTime(hours)}—á, ${RoundTime(minutes)}–º\`!`,
	})

	message.edit({
		content: `<@${creator_id}> —Å–æ–±—Ä–∞–Ω–∏–µ —É–∂–µ –∑–∞–∫—Ä—ã—Ç–æ, –æ–Ω–æ –ø—Ä–æ–¥–ª–∏–ª–æ—Å—å \`${RoundTime(hours)}—á, ${RoundTime(minutes)}–º\`!`,
		embeds: [
			{
				title: `${meet.emoji} –°–æ–±—Ä–∞–Ω–∏–µ ${user.userName}`,
				description: `${user.userName} –≤–∞—à–µ —Å–æ–±—Ä–∞–Ω–∏–µ –±—ã–ª–æ –∑–∞–∫–æ–Ω—á–µ–Ω–æ, —Ç–µ–º—ã —Å–æ–±—Ä–∞–Ω–∏—è: \`${meet.games_list.join(', ')}\`.\n–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–æ–±—Ä–∞–Ω–∏—è:<@${creator_id}>, ${ping_users.join(', ')}!\n–í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Å–æ–±—Ä–∞–Ω–∏—è: \`${RoundTime(hours)}—á, ${RoundTime(minutes)}–º\``,
				color: Colors.Red,
				footer: {
					text: `–°–æ–±—Ä–∞–Ω–∏–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ ${time.toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}`,
				},
			},
		],
		components: [],
	})

	message.thread.setArchived(true)

	fs.unlinkSync(`./src/dataBase/meets/${creator_id}.json`)
}

module.exports = { meetCreate, meetStart, checkPlans, meetEnd_message }
